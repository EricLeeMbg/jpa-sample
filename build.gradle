buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.apache.tomcat.embed:tomcat-embed-jasper')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('mysql:mysql-connector-java:5.1.34')

	//QueryDSL
	compile('com.querydsl:querydsl-core')
	compile('com.querydsl:querydsl-apt')
	compile('com.querydsl:querydsl-jpa')


	// Elastic Search
	compile('org.elasticsearch:elasticsearch:5.1.1')
	compile('org.elasticsearch.client:transport:5.1.1')
	compile('org.apache.logging.log4j:log4j-to-slf4j:2.7')

	compile('javax.servlet:jstl:1.2')


	testCompile('org.springframework.boot:spring-boot-starter-test')
}

sourceSets {
	generated {
		java {
			srcDirs =  ["src/main/generated"]
		}
	}
}

configurations {
	querydslapt
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Query dsl Generator') {
	source = sourceSets.main.java
	classpath = configurations.compile + configurations.querydslapt
	options.compilerArgs = [
			"-proc:only",
			"-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	options.encoding = 'UTF-8'
	destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
	dependsOn generateQueryDSL
	source generateQueryDSL.destinationDir
}

compileGeneratedJava {
	dependsOn generateQueryDSL
	options.warnings = false
	classpath += sourceSets.main.runtimeClasspath
}

clean {
	delete sourceSets.generated.java.srcDirs.iterator().next()
}